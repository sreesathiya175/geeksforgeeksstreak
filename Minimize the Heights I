#User function Template for python3

class Solution:
    def getMinDiff(self, arr, k):
        # If the array has less than 2 elements, no difference can be computed
        if len(arr) == 0:
            return 0

        # Sort the array to easily find the smallest and largest elements
        arr.sort()

        # Initialize the minimum difference to the difference between the max and min values
        min_diff = arr[-1] - arr[0]

        # Iterate through the array to compute the minimum possible difference
        for i in range(1, len(arr)):
            if arr[i] >= k:
                # Calculate new possible values
                high = max(arr[-1] - k, arr[i-1] + k)
                low = min(arr[0] + k, arr[i] - k)

                # Update the minimum difference
                min_diff = min(min_diff, high - low)

        return min_diff


#{ 
 # Driver Code Starts
#Initial Template for Python 3

if __name__ == '__main__':
    tc = int(input())
    while tc > 0:
        k = int(input())
        # n = int(input())
        arr = list(map(int, input().strip().split()))
        ob = Solution()
        ans = ob.getMinDiff(arr, k)
        print(ans)
        tc -= 1

# } Driver Code Ends
